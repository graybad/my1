import telebot
import menu
import settings
import random
import time
import sqlite3
import requests
import json
from datetime import datetime


def bot():
    bot = telebot.TeleBot(settings.BotToken, threaded=False)

    @bot.message_handler(commands=['start'])
    def start_handler(message):
        if message.text[7:] == '':
            who_invited = 0
        else:
            who_invited = message.text[7:]
        conn = sqlite3.connect("base.sqlite")
        cursor = conn.cursor()
        cursor.execute('SELECT * FROM info')
        row = cursor.fetchone()

        newuser = 0
        newid = 0

        while row is not None:
            if row[1] == str(message.chat.id):
                newuser = 0
            else:
                newuser = 1
            newid += 1
            row = cursor.fetchone()

        if newuser == 1:
            cursor.execute("INSERT INTO info (id, userid, date, who_invited, his_referral_code) VALUES ('{}','{}','{}','{}','{}')".format(newid, message.chat.id, str(datetime.now()), who_invited, message.chat.id))
            conn.commit()

        cursor.close()
        conn.close()
        bot.send_message(message.chat.id, text='‚ùï–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, '+str(message.from_user.first_name)+'\n‚ùï–í–∞—à id - '+str(message.chat.id)+' \n‚ùóÔ∏è–î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ —Å–≤–æ–π –≤–æ–∑—Ä–∞—Å—Ç.\n‚ùóÔ∏è–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´ –ú–Ω–µ –µ—Å—Ç—å 18 ¬ª, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ –Ω–∞–ª–∏—á–∏–µ 18 –ª–µ—Ç.', reply_markup=menu.ageChoice)

    @bot.callback_query_handler(func=lambda call: True)
    def callback_inline(call):
        chat_id = call.message.chat.id
        message_id = call.message.message_id

        if call.data == '–ú–Ω–µ –µ—Å—Ç—å 18 –ª–µ—Ç':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Å—Ç—Ä–∞–Ω—É',
                                  reply_markup=menu.countries)

        if call.data == '–ú–Ω–µ –Ω–µ—Ç 18 –ª–µ—Ç':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–ò–∑–≤–∏–Ω–∏—Ç–µ, –Ω–æ –≤—ã –Ω–µ –¥–æ—Å—Ç–∏–≥–ª–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ–ª–µ—Ç–∏—è (18 –ª–µ—Ç).\n'
                                       '–ï—Å–ª–∏ –≤—ã –æ—à–∏–±–ª–∏—Å—å —Å –≤—ã–±–æ—Ä–æ–º, –≤—ã –º–æ–∂–µ—Ç–µ –≤–µ—Ä–Ω—É—Ç—å—Å—è –Ω–∞–∑–∞–¥, –Ω–∞–∂–∞–≤ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´ üîôBACK ¬ª''',
                                  reply_markup=menu.back)

        if call.data == 'üîôBACK':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚ùóÔ∏è–ù–∞–∂–∏–º–∞—è –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´ –ú–Ω–µ –µ—Å—Ç—å 18 ¬ª, –≤—ã –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ—Ç–µ, —á—Ç–æ –≤–∞–º —É–∂–µ –∏—Å–ø–æ–ª–Ω–∏–ª–æ—Å—å 18 –ª–µ—Ç.',
                                  reply_markup=menu.ageChoice)

        if call.data in 'cities_ru cities_ua cities_kz':
            country = None
            if call.data == 'cities_ru':
                country = '–†–æ—Å—Å–∏—è'
            if call.data == 'cities_ua':
                country = '–£–∫—Ä–∞–∏–Ω–∞'
            if call.data == 'cities_kz':
                country = '–ö–∞–∑–∞—Ö—Å—Ç–∞–Ω'

            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚úÖ–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ {}\n –í—ã–±–µ—Ä–∏—Ç–µ –≥–æ—Ä–æ–¥'.format(country),
                                  reply_markup=menu.multi_menu(call.data, type_obj=None))

        if call.data[:2:] in 'üá∑üá∫ üá∫üá¶ üá∞üáø':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚úÖ–í–∞—à–∞ —Å—Ç—Ä–∞–Ω–∞ {}\n‚úÖ–í–∞—à –≥–æ—Ä–æ–¥ - {}'.format(call.data[:2:],
                                                                                 call.data[3:]),
                                  reply_markup=menu.menu_num2)

        if call.data == 'back_to_menu':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –º–µ–Ω—é',
                                  reply_markup=menu.menu_num2)

        if call.data == 'referral_system':
            conn = sqlite3.connect("base.sqlite")
            cursor = conn.cursor()
            referred_users = cursor.execute('''SELECT * FROM info WHERE who_invited = {}'''.format(chat_id)).fetchall()
            number_of_purchases = cursor.execute('''SELECT * FROM purchase_information WHERE referral_code = {} AND sum != 0'''.format(chat_id)).fetchall()
            amount_of_income = 0
            cursor.execute('''SELECT * FROM purchase_information WHERE referral_code = {} AND sum != 0'''.format(chat_id))
            row = cursor.fetchall()

            for i in row:
                amount_of_income += int(i[3])

            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text=settings.referral_system.format(len(referred_users),
                                                                       len(number_of_purchases),
                                                                       amount_of_income/(settings.percent_referral_system/100),
                                                                       login=settings.login_bot,
                                                                       referral_code=chat_id),
                                  reply_markup=menu.referral_menu)

        if call.data == 'snus_catalog':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚ùï –í—ã –ø–µ—Ä–µ—à–∏–ª –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å–Ω—é—Å–∞\n‚ùï –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É —Å–Ω—é—Å–∞',
                                  reply_markup=menu.multi_menu(call.data, type_obj=None))

        if call.data[:1:] == 'üí†':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚ùï –ö–∞—Ç–∞–ª–æ–≥ {}'.format(call.data[1:]),
                                  reply_markup=menu.multi_menu(call.data[1:], 'type2'))

        if call.data == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å—Ç—Ä–∞–Ω—ã –∏ –≥–æ—Ä–æ–¥–∞':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í—ã–±–µ—Ä–∏—Ç–µ –≤–∞—à—É —Å—Ç—Ä–∞–Ω—É',
                                  reply_markup=menu.countries)

        if call.data == '–í–µ—Ä–Ω—É—Ç—å—Å—è –∫ –≤—ã–±–æ—Ä—É —Å–Ω—é—Å–∞':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='‚ùï –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å–Ω—é—Å–∞\n‚ùï –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É —Å–Ω—é—Å–∞',
                                  reply_markup=menu.multi_menu('snus_catalog', type_obj=None))

        if call.data[:1:] == 'üíé':
            random_code = random.randint(111111, 999999)
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text=settings.cb.format(call.data[1:],
                                                          random_code,
                                                          call.data[-6:-3]),
                                  reply_markup=menu.check_buy)
            conn = sqlite3.connect("base.sqlite")
            cursor = conn.cursor()
            cursor.execute(f'''INSERT INTO check_payment VALUES("{call.message.chat.id}",
                                                                "{None}",
                                                                "{call.data[-6:-3]}",
                                                                "{random_code}",
                                                                "{None}")''')
            conn.commit()
            cursor.close()
            conn.close()

        if call.data == 'check_payment':
            session = requests.Session()
            session.headers['authorization'] = 'Bearer ' + settings.QIWI_TOKEN
            parameters = {'rows': '3'}
            h = session.get(
                'https://edge.qiwi.com/payment-history/v1/persons/{}/payments'.format(settings.QIWI_ACCOUNT),
                params=parameters)
            req = json.loads(h.text)

            conn = sqlite3.connect('base.sqlite')
            cursor = conn.cursor()
            result = cursor.execute(f'SELECT * FROM check_payment WHERE user_id = {call.message.chat.id}').fetchone()

            for i in range(len(req['data'])):
                if req['data'][i]['comment'] == result[3]:
                    if req['data'][i]['sum']['amount'] == result[2]:
                        bot.send_message(settings.IdAdmin, '–•–æ–∑—è–∏–Ω –≤—ã –±–æ–≥–∞—Ç—ã!!! –ü—Ä–æ—à–ª–∞ –æ–ø–ª–∞—Ç–∞ {} —Ä—É–±'.format(result[2]))

                        cursor.execute(f'''INSERT INTO purchase_information VALUES("{call.message.chat.id}",
                                                                                    "{datetime.now()}",
                                                                                    "{result[4]}",
                                                                                    "{result[2]}")''')
                        conn.cursor()

                        cursor.execute(f'DELETE FROM check_payment WHERE user_id = {call.message.chat.id}')
                        conn.cursor()

                        bot.send_message(chat_id, '‚ùï –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n'
                                                  '‚ùï –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç\n'
                                                  '‚ùï –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"',
                                         reply_markup=menu.ch)

            bot.send_message(chat_id, '‚ùï –û–ø–ª–∞—Ç–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞\n'
                                      '‚ùï –ü–æ–≤—Ç–æ—Ä–∏—Ç–µ –ø–æ–≤—Ç–æ—Ä–Ω—É—é –ø—Ä–æ–≤–µ—Ä–∫—É —á–µ—Ä–µ–∑ –ø–∞—Ä—É –º–∏–Ω—É—Ç\n'
                                      '‚ùï –î–ª—è –ø—Ä–æ–¥–æ–ª–∂–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å"',
                             reply_markup=menu.ch)
        
        if call.data == 'cancel_payment':
            conn = sqlite3.connect("base.sqlite")
            cursor = conn.cursor()
            cursor.execute("DELETE FROM check_payment WHERE user_id = {}".format(call.message.chat.id))
            conn.commit()
            cursor.close()
            conn.close()
            bot.edit_message_text(
                chat_id=chat_id,
                message_id=message_id,
                text='‚ùï –í—ã –ø–µ—Ä–µ—à–ª–∏ –≤ –∫–∞—Ç–∞–ª–æ–≥ —Å–Ω—é—Å–∞\n‚ùï –í—ã–±–µ—Ä–∏—Ç–µ –º–∞—Ä–∫—É —Å–Ω—é—Å–∞',
                reply_markup=menu.multi_menu('snus_catalog', type_obj=None)
            )

        if call.data == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
            bot.delete_message(chat_id, message_id)

        if call.data == 'exit_admin_menu':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í—ã –≤—ã—à–ª–∏',
                                  reply_markup=menu.ageChoice)

        if call.data == 'full_info':
            if chat_id == settings.IdAdmin:
                conn = sqlite3.connect('base.sqlite')
                cursor = conn.cursor()
                cursor.execute('SELECT * FROM info')
                row = cursor.fetchone()

                current_time = str(datetime.now())

                amount_user_all = 0
                amount_user_day = 0
                amount_user_hour = 0

                while row is not None:
                    amount_user_all = row[0]
                    if row[2][:-15:] == current_time[:-15:]:
                        amount_user_day += 1
                    if row[2][:-13:] == current_time[:-13:]:
                        amount_user_hour += 1

                    row = cursor.fetchone()

                number_of_purchases = cursor.execute('SELECT * FROM purchase_information').fetchall()

                bot.edit_message_text(chat_id=chat_id,
                                      message_id=message_id,
                                      text='–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –≤—Å–µ –≤—Ä–µ–º—è - {}\n'
                                           '–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ –¥–µ–Ω—å - {}\n'
                                           '–£–Ω–∏–∫–∞–ª—å–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∑–∞ —á–∞—Å - {}\n\n'
                                           '–ü–æ–∫—É–ø–æ–∫ —Å–æ–≤–µ—Ä—à–µ–Ω–Ω–æ - {}'.format(amount_user_all,
                                                                            amount_user_day,
                                                                            amount_user_hour,
                                                                            len(number_of_purchases)),
                                      reply_markup=menu.back_to_admin_menu)

                cursor.close()
                conn.close()

        if call.data == 'user_info':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í–≤–µ–¥–∏—Ç–µ id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –≤–∏–¥–µ id:–ò–î_–ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø\n–ü—Ä–∏–º–µ—Ä: id:00000000',
                                  reply_markup=menu.back_to_admin_menu)

        if call.data == 'back_to_admin_menu':
            bot.edit_message_text(chat_id=chat_id,
                                  message_id=message_id,
                                  text='–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é',
                                  reply_markup=menu.adminMenu)

        if call.data == 'top_user':
            if chat_id == settings.IdAdmin:
                bot.delete_message(chat_id=chat_id,
                                   message_id=message_id)

                conn = sqlite3.connect("base.sqlite")
                cursor = conn.cursor()

                info = cursor.execute('''SELECT * FROM info WHERE who_invited != 0''').fetchall()
                list_ref = []

                for i in info:
                    list_ref.append(i[3])

                sort_list_ref = list(set(list_ref))

                for i in range(len(sort_list_ref)):
                    if i > 4:
                        break
                    amount = 0
                    if i > 10:
                        break
                    for i2 in list_ref:
                        if i2 == sort_list_ref[i]:
                            amount += 1

                    bot.send_message(chat_id=chat_id,
                                     text='üèÖ{} –º–µ—Å—Ç–æ - {} - –∫–æ–ª-–≤–æ –ø—Ä–∏–≥–ª–∞—à–µ–Ω–Ω—ã—Ö - {}'.format(i+1,
                                                                                             sort_list_ref[i],
                                                                                             amount))

                bot.send_message(chat_id=chat_id,
                                 text='‚ùï–¢–æ–ø –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –≤—ã–≤–µ–¥–µ–Ω',
                                 reply_markup=menu.back_to_admin_menu)

    @bot.message_handler(commands=['admin'])
    def send_mes(message):
        if message.chat.id == settings.IdAdmin:
            bot.send_message(message.chat.id, '–í—ã –≤–æ—à–ª–∏ –≤ –∞–¥–º–∏–Ω—Å–∫–æ–µ –º–µ–Ω—é',
                             reply_markup=menu.adminMenu)

    @bot.message_handler(content_types=['text'])
    def send_message(message):
        if message.chat.id == settings.IdAdmin:
            try:
                if 'id:' in message.text:
                    id_user = None
                    who_invite = None
                    date_of_registration = None
                    number_of_invited_users = None
                    referrals_purchase_amount = 0

                    conn = sqlite3.connect("base.sqlite")
                    cursor = conn.cursor()

                    info = cursor.execute('''SELECT * FROM info WHERE userid = {}'''.format(message.text[3:])).fetchone()
                    id_user = info[1]
                    date_of_registration = info[2]
                    who_invite = info[3]

                    info = cursor.execute('''SELECT * FROM purchase_information WHERE referral_code = {}'''.format(
                        message.text[3:])).fetchall()
                    number_of_invited_users = len(info)

                    info = cursor.execute(
                        '''SELECT * FROM purchase_information WHERE referral_code = {} AND sum != 0'''.format(
                            message.text[3:]))
                    for i in info:
                        referrals_purchase_amount += int(i[3])

                    bot.send_message(chat_id=message.chat.id,
                                     text='‚ùï–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ\n\n'
                                          '‚ùï–ò–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {}\n'
                                          '‚ùï–†–µ—Ñ–µ—Ä–∞–ª—å–Ω—ã–π –∫–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - {}\n'
                                          '‚ùï–ï–≥–æ –ø—Ä–∏–≥–ª–∞—Å–∏–ª - {}\n'
                                          '‚ùï–î–∞—Ç–∞ –ø–µ—Ä–≤–æ–≥–æ –≤—Ö–æ–¥–∞ - {}\n'
                                          '‚ùï–ö–æ–ª-–≤–æ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ - {}\n'
                                          '‚ùï–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–∫—É–ø–æ–∫ –µ–≥–æ —Ä–µ—Ñ–µ—Ä–∞–ª–æ–≤ - {}\n'.format(id_user,
                                                                                            id_user,
                                                                                            who_invite,
                                                                                            date_of_registration,
                                                                                            number_of_invited_users,
                                                                                            referrals_purchase_amount),
                                     reply_markup=menu.back_to_admin_menu)
            except:
                bot.send_message(chat_id=message.chat.id,
                                 text='‚ùå–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π id –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –ª–∏–±–æ –µ–≥–æ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç',
                                 reply_markup=menu.back_to_admin_menu)

    while True:
        try:
            bot.polling(none_stop=True)
        except Exception as e:
            print(e)
            time.sleep(15)


bot()
